// router.post("/create/user",async(req,res,next)=>{
//   console.log(req.body);
//   const user = await new userModel(req.body).save();
//   res.status(201).json({
//     user
//   })
// })
// router.post("/create/product/:id",async(req,res,next)=>{
//  try {
//   const user = await userModel.findById(req.params.id);
//   const product = await new productModel(req.body).save();
//   product.user = user._id;
//   user.product.push(product._id);
//   // product.img = req.file.filename;
//   await user.save();
//   await product.save();
//   res.status(201).json({
//     product,user
//   })
//  } catch (error) {
//   console.log(error);
//  }
// })
// router.get("/get/user/:id",async(req,res,next)=>{
//   const user = await userModel.findById(req.params.id).populate("product");
//   res.json({
//     user
//   })
// })
// router.post("/update/:id",async(req,res,next)=>{
//   console.log(req.body);
//   const user = await userModel.findByIdAndUpdate(req.params.id,req.body);
//   res.status(201).json({
//     user
//   })
// })

// const product = await productModel.create({
  //   productAmount:req.body.productAmount,
  //   productName:req.body.productName
  // })


///////////////////////////////////////////////////////
 // const user = await productModel.findOne({
  //   username: req.session.passport.user
  // });
  // user.productImage = req.file.filename

  // await user.save();

  
  // res.redirect("/userprofile");
  ////////////////////////////////
  // {
  //   "compilerOptions": {
  //     "allowJs": true,
  //     "checkJs": false,
  //     "strict": true,
  //     "alwaysStrict": true,
  //     "target": "ES2021",
  //     "module": "commonJS",
  //     "moduleResolution": "node",
  //     "skipLibCheck": true,
  //     "lib": [
  //       "es2021",
  //       "ES2022.Error"
  //     ],
  //     // We don't make use of tslib helpers, all syntax used is supported by target engine
  //     "importHelpers": false,
  //     "noEmitHelpers": true,
  //     // Never emit error filled code
  //     "noEmitOnError": true,
  //     "outDir": "lib",
  //     // We want the sourcemaps in a separate file
  //     "inlineSourceMap": false,
  //     "sourceMap": true,
  //     // API-Extractor uses declaration maps to report problems in source, no need to distribute
  //     "declaration": true,
  //     "declarationMap": true,
  //     // we include sources in the release
  //     "inlineSources": false,
  //     // Prevents web types from being suggested by vscode.
  //     "types": [
  //       "node"
  //     ],
  //     "forceConsistentCasingInFileNames": true,
  //     "noImplicitOverride": true,
  //     "noImplicitReturns": true,
  //     // TODO(NODE-3659): Enable useUnknownInCatchVariables and add type assertions or remove unnecessary catch blocks
  //     "useUnknownInCatchVariables": false
  //   },
  //   "ts-node": {
  //     "transpileOnly": true,
  //     "compiler": "typescript-cached-transpile"
  //   },
  //   "include": [
  //     "src/**/*"
  //   ]
  // }
  